# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    App\Controller\:
        resource: '../src/Controller/'
        tags: ['controller.service_arguments']

    App\API\Action\:
        resource: '../src/API/Action/'
        tags: ['controller.service_arguments']

    TheMovieDBClient:
        class: Symfony\Component\HttpClient\NativeHttpClient
        factory: ['App\Factory\CreateHttpClientFactory', 'createHttpClient']
        arguments:
            $baseUri: '%env(API_BASE_URI)%'
            $apiKey: '%env(API_KEY)%'

    TheMovieDBImageClient:
        class: Symfony\Component\HttpClient\NativeHttpClient
        factory: [ 'App\Factory\CreateHttpClientFactory', 'createHttpClient' ]
        arguments:
            $baseUri: '%env(IMAGE_API_BASE_URI)%'
            $apiKey: '%env(API_KEY)%'
    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\API\RequestManager:
        arguments:
            $client: '@TheMovieDBClient'

    RequestManagerImage:
        class: App\API\RequestManager
        arguments:
            $client: '@TheMovieDBImageClient'

    App\API\Action\Image\ImageAction:
        arguments:
            $requestManager: '@RequestManagerImage'
        tags: ['controller.service_arguments']
